[versions]
# from settings.gradle
springBoot = "3.3.4"
springDep = "1.1.6"
springCloud = "2023.0.1"
testcontainers = "1.20.1"

# Types
googleGuava = "33.5.0-jre"

#flyway = "10.19.0"
flyway = "10.20.1"
flywayPg = "10.20.1"    # flyway-database-postgresql
swaggerAnnotations = "2.2.21"

# Data / infra
postgres = "42.7.2"
awsBom = "2.20.162"     # software.amazon.awssdk BOM & modules
springCloudAws = "3.0.5"
springIntegration = "6.0.9"

# Jackson / libs
jackson = "2.17.2"
lombok = "1.18.36"
drools = "9.44.0.Final"
kogitoBom = "999-20240922"
commonsBeanutils = "1.9.4"
commonsLang3 = "3.17.0"  # from your apacheCommons

# Test
junitBom = "5.10.0"
mockito = "5.11.0"
assertj = "3.25.3"

# Core Spring 6 for non-boot libs (optional)
spring = "6.1.9"

# Misc
h2 = "2.2.224"
micrometer = "1.13.5"
slf4j = "2.0.13"
jakartaValidation = "3.0.2"
jakartaPersistence = "3.1.0"
java = "21"

[libraries]
# Boot starters
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "springBoot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBoot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springBoot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "springBoot" }
spring-boot-config-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "springBoot" }
spring-boot-test-autoconfigure = { module = "org.springframework.boot:spring-boot-test-autoconfigure", version.ref = "springBoot" }
spring-boot-web-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }

# Core Spring libs (for non-boot modules / AOP/etc.)
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-aop = { module = "org.springframework:spring-aop", version.ref = "spring" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring" }
spring-webflux = { module = "org.springframework:spring-webflux", version.ref = "spring" }
spring-beans = { module = "org.springframework:spring-beans", version.ref = "spring" }

# DB / migrations
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-pg = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flywayPg" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }

# AWS SDK v2
aws-s3 = { module = "software.amazon.awssdk:s3", version.ref = "awsBom" }
aws-sqs = { module = "software.amazon.awssdk:sqs", version.ref = "awsBom" }

# Spring Cloud AWS (v3.x)
spring-cloud-aws-starter-sqs = { module = "io.awspring.cloud:spring-cloud-aws-starter-sqs", version.ref = "springCloudAws" }
spring-cloud-aws-starter-sns = { module = "io.awspring.cloud:spring-cloud-aws-starter-sns", version.ref = "springCloudAws" }

# Integration / Messaging
spring-integration-core = { module = "org.springframework.integration:spring-integration-core", version.ref = "springIntegration" }

# Jackson / Swagger
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swaggerAnnotations" }

# Rules (optional)
drools-core = { module = "org.drools:drools-core", version.ref = "drools" }
drools-decisiontables = { module = "org.drools:drools-decisiontables", version.ref = "drools" }

# Commons
commons-beanutils = { module = "commons-beanutils:commons-beanutils", version.ref = "commonsBeanutils" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }

# Observability / misc
micrometer = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
jakarta-validation = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartaValidation" }
jakarta-persistence = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakartaPersistence" }

# Lombok
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# Google Guava
guava = { module = "com.google.guava:guava", version.ref = "googleGuava" }

# Tests
junit-bom = { module = "org.junit:junit-bom", version.ref = "junitBom" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
wiremock = { module = "org.wiremock:wiremock", version = "2.42.0" }

testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }

[bundles]
boot-web = ["spring-boot-starter-web", "spring-boot-starter-aop", "spring-boot-starter-actuator", "spring-beans"]
boot-model = ["jackson-databind", "jakarta-validation", "spring-boot-starter-validation", "jakarta-persistence"]
boot-data = ["spring-boot-starter-data-jpa", "jakarta-validation"]
boot-service = ["spring-context", "spring-aop", "spring-tx", "jakarta-validation", "jakarta-persistence", "slf4j-api"]
spring-core = ["spring-context", "spring-aop", "spring-tx", "spring-web", "jakarta-validation", "micrometer", "slf4j-api"]
test-base = ["junit-jupiter", "junit-platform-launcher", "mockito-core", "assertj-core", "spring-boot-test-autoconfigure"]
aws = ["aws-s3", "aws-sqs"]

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDep = { id = "io.spring.dependency-management", version.ref = "springDep" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }